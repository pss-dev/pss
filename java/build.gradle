plugins {
   id 'org.springframework.boot' version '2.1.6.RELEASE'
   id 'java'
}

apply plugin: 'io.spring.dependency-management'

sourceCompatibility = '1.8'

configurations {
   developmentOnly
   runtimeClasspath {
      extendsFrom developmentOnly
   }
   compileOnly {
      extendsFrom annotationProcessor
   }
}

repositories {
   maven {
      url 'http://maven.aliyun.com/nexus/content/groups/public'
   }
   mavenCentral()
}

dependencies {
   // spring
   implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
   implementation 'org.springframework.boot:spring-boot-starter-web'
   implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

   // Cache
   implementation 'org.springframework.boot:spring-boot-starter-cache'
   implementation 'net.sf.ehcache:ehcache'

   // datasource
   runtimeOnly "mysql:mysql-connector-java:${mysqlVersion}"
   testRuntimeOnly 'com.h2database:h2'
   implementation 'com.alibaba:druid:1.1.18'

   // security
//   implementation "org.apache.shiro:shiro-core:${shiroVersion}"
//   implementation "org.apache.shiro:shiro-ehcache:${shiroVersion}"
//   implementation "org.apache.shiro:shiro-web:${shiroVersion}"
//   implementation "org.apache.shiro:shiro-quartz:${shiroVersion}"
   implementation "org.apache.shiro:shiro-spring:${shiroVersion}"

   // tools
   developmentOnly 'org.springframework.boot:spring-boot-devtools'
   annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

   // springfox swagger
   implementation "io.springfox:springfox-swagger2:${swaggerVersion}"
   implementation "io.springfox:springfox-swagger-ui:${swaggerVersion}"

   // test
   testImplementation('org.springframework.boot:spring-boot-starter-test') {
      exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
      exclude group: 'org.junit.platform', module: 'junit-platform-engine'
      exclude group: 'org.junit.platform', module: 'junit-platform-commons'
   }

   testImplementation("org.junit.jupiter:junit-jupiter-api:${jupiterVersion}") {
      exclude group: 'org.junit.platform', module: 'junit-platform-commons'
   }
   testImplementation("org.junit.jupiter:junit-jupiter-params:${jupiterVersion}") {
      exclude group: 'org.junit.platform', module: 'junit-platform-commons'
   }

   testImplementation("org.junit.jupiter:junit-jupiter-engine:${jupiterVersion}") {
      exclude group: 'org.junit.platform', module: 'junit-platform-engine'
      exclude group: 'org.junit.platform', module: 'junit-platform-commons'
   }
   testImplementation "org.junit.platform:junit-platform-engine:1.6.2"
   testImplementation "org.junit.platform:junit-platform-commons:1.6.2"
}

task cleanAll(type: Delete, dependsOn: [clean]) {
   group 'build'
   delete = ['out', '.gradle']
}

test {
   useJUnitPlatform()

   testLogging {
      events "passed", "skipped", "failed"
   }
}

task server() {
   group 'application'
   description 'run the application'

   doLast {
      javaexec {
         classpath sourceSets.main.runtimeClasspath
         main = 'com.pssdev.pss.PssApplication'
         jvmArgs = [
            '-Djava.rmi.server.hostname=127.0.0.1',
            '-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=5005']
         args = ['--stop-port', '8082', '--stop-key', 'stop']
      }
   }
}

tasks.bootJar.configure {
   archivesBaseName = "pss-ms";
}

tasks.bootJar.dependsOn(tasks.findByPath(':web:build'))
